services:
  # Windmill Setup DB migration setup
  - type: worker
    name: windmill-setup-db
    runtime: node
    repo: https://github.com/cj/wmilll_render.git
    buildCommand: npm install
    startCommand: npm run setup-db
    envVars:
      - key: WINDMILL_SETUP
        value: "true"
      - key: DATABASE_URL
        fromDatabase:
          name: windmill-db
          property: connectionString

  # Windmill Caddy
  - type: web
    name: windmill-caddy
    runtime: docker
    healthCheckPath: /
    repo: https://github.com/cj/wmilll_render.git
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: MINIO_SERVER_READY
        fromService:
          name: windmill-minio-server
          type: web
          envVarKey: WINDMILL_SETUP
      - key: MINIO_CONSOLE_READY
        fromService:
          name: windmill-minio-console
          type: web
          envVarKey: WINDMILL_SETUP
      - key: SERVER_READY
        fromService:
          name: windmill-server
          type: pserv
          envVarKey: WINDMILL_SETUP
      - key: INDEXER_READY
        fromService:
          name: windmill-indexer
          type: pserv
          envVarKey: WINDMILL_SETUP
      - key: WORKER_READY
        fromService:
          name: windmill-worker
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: WORKER_NATIVE_READY
        fromService:
          name: windmill-worker-native
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: MULTIPLAYER_READY
        fromService:
          name: windmill-multiplayer
          type: pserv
          envVarKey: WINDMILL_SETUP
      - key: LSP_READY
        fromService:
          name: windmill-lsp
          type: pserv
          envVarKey: WINDMILL_SETUP
      - key: WINDMILL_SERVER_HOST
        fromService:
          name: windmill-server
          type: pserv
          property: host
      - key: LSP_HOST
        fromService:
          name: windmill-lsp
          type: pserv
          property: host
      - key: MULTIPLAYER_HOST
        fromService:
          name: windmill-multiplayer
          type: pserv
          property: host
      - key: INDEXER_HOST
        fromService:
          name: windmill-indexer
          type: pserv
          property: host

  # Windmill Server
  - type: pserv
    name: windmill-server
    runtime: image
    image:
      url: ghcr.io/windmill-labs/windmill-ee:main
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: SERVER_READY
        fromService:
          name: windmill-server
          type: pserv
          envVarKey: WINDMILL_SETUP
      - key: DATABASE_URL
        fromDatabase:
          name: windmill-db
          property: connectionString
      - key: PORT
        value: "8000"
      - key: MODE
        value: server

  # Windmill Worker
  - type: worker
    name: windmill-worker
    runtime: image
    image:
      url: ghcr.io/windmill-labs/windmill-ee:main
    numInstances: 3
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: DATABASE_URL
        fromDatabase:
          name: windmill-db
          property: connectionString
      - key: MODE
        value: worker
      - key: WORKER_GROUP
        value: default
    ## NOTE:
    # Can't mount presistent storage if numInstances > 1
    # you can instead mount cache to s3 in instance settings
    # or manually create multiple workers in this yaml file
    # each with a disk as specified below:
    #
    # disk:
    #   name: worker_cache
    #   mountPath: /tmp/windmill/cache
    #   sizeGB: 10

  # Windmill Native Worker
  - type: worker
    name: windmill-worker-native
    runtime: image
    image:
      url: ghcr.io/windmill-labs/windmill-ee:main
    plan: starter
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: windmill-db
          property: connectionString
      - key: MODE
        value: worker
      - key: WORKER_GROUP
        value: native
      - key: NUM_WORKERS
        value: "8"
      - key: SLEEP_QUEUE
        value: "200"

  # New service: Windmill Indexer
  - type: pserv
    name: windmill-indexer
    runtime: image
    image:
      url: ghcr.io/windmill-labs/windmill-ee:main
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: MINIO_SERVER_READY
        fromService:
          name: windmill-minio-server
          type: web
          envVarKey: WINDMILL_SETUP
      - key: PORT
        value: "8001"
      - key: DATABASE_URL
        fromDatabase:
          name: windmill-db
          property: connectionString
      - key: MODE
        value: indexer

  # New service: LSP
  - type: pserv
    name: windmill-lsp
    runtime: image
    image:
      url: ghcr.io/windmill-labs/windmill-lsp:latest
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: PORT
        value: "3001"
    disk:
      name: lsp_cache
      mountPath: /pyls/.cache

  # New service: Multiplayer
  - type: pserv
    name: windmill-multiplayer
    runtime: image
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: PORT
        value: "3002"
    image:
      url: ghcr.io/windmill-labs/windmill-multiplayer:latest

    # A private service with an attached persistent disk
  - type: web
    name: windmill-minio-server
    healthCheckPath: /minio/health/live
    runtime: image
    image:
      url: docker.io/minio/minio:latest
    dockerCommand: minio server /data --address $HOST:$PORT --console-address $HOST:$CONSOLE_PORT
    disk:
      name: data
      mountPath: /data
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: MINIO_ROOT_USER
        generateValue: true
      - key: MINIO_ROOT_PASSWORD
        generateValue: true
      - key: HOST
        value: "0.0.0.0"
      - key: PORT
        value: 9000
      - key: CONSOLE_PORT
        value: 9090

  - type: web
    name: windmill-minio-console
    runtime: docker
    repo: https://github.com/render-examples/minio
    dockerContext: /
    dockerfilePath: ./Dockerfile
    envVars:
      - key: WINDMILL_SETUP
        fromService:
          name: windmill-setup-db
          type: worker
          envVarKey: WINDMILL_SETUP
      - key: PORT
        value: 10000
      - key: MINIO_HOST
        fromService:
          name: windmill-minio-server
          type: web
          property: host
      - key: MINIO_CONSOLE_PORT
        fromService:
          name: windmill-minio-server
          type: web
          envVarKey: CONSOLE_PORT

databases:
  - name: windmill-db
    postgresMajorVersion: "16"
    # NOTE: scale as needed
    plan: basic-4gb
    databaseName: windmill
    user: windmill
    ## NOTE: enable for prod
    # highAvailability:
    #   enabled: true
